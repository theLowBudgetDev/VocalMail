
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./vocalmail.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String

  sentEmails      Email[]   @relation("SentBy")
  receivedEmails  EmailRecipient[]
  contacts        Contact[] @relation("Owner")
  contactOf       Contact[] @relation("ContactUser")

  @@map("users")
}

model Email {
  id            Int      @id @default(autoincrement())
  senderId      Int
  subject       String
  body          String
  sentAt        DateTime @default(now())
  senderStatus  String   // e.g., 'sent', 'deleted'

  sender     User              @relation("SentBy", fields: [senderId], references: [id])
  recipients EmailRecipient[]

  @@map("emails")
}

model EmailRecipient {
  emailId     Int
  recipientId Int
  read        Boolean  @default(false)
  status      String   // e.g., 'inbox', 'archive', 'deleted'

  email     Email @relation(fields: [emailId], references: [id], onDelete: Cascade)
  recipient User  @relation(fields: [recipientId], references: [id], onDelete: Cascade)

  @@id([emailId, recipientId])
  @@map("email_recipients")
}

model Contact {
  ownerId       Int
  contactUserId Int

  owner       User @relation("Owner", fields: [ownerId], references: [id], onDelete: Cascade)
  contactUser User @relation("ContactUser", fields: [contactUserId], references: [id], onDelete: Cascade)

  @@id([ownerId, contactUserId])
  @@map("contacts")
}

model AudioCache {
  text         String @id
  audioDataUri String

  @@map("audio_cache")
}
