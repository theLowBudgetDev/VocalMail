
datasource db {
  provider = "sqlite"
  url      = "file:./vocalmail.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  name          String
  password      String
  
  sentEmails    Email[]   @relation("SentEmails")
  receivedEmails EmailRecipient[]
  contacts      Contact[] @relation("UserContacts")
  ownedContacts Contact[] @relation("OwnedContacts")

  @@map("users")
}

model Email {
  id        Int      @id @default(autoincrement())
  senderId  Int
  subject   String
  body      String
  sentAt    DateTime @default(now())
  
  senderStatus  String   // e.g., 'sent', 'deleted'
  
  sender    User     @relation("SentEmails", fields: [senderId], references: [id])
  recipients EmailRecipient[]

  @@map("emails")
}

model EmailRecipient {
  emailId      Int
  recipientId  Int
  read         Boolean
  status       String // 'inbox', 'archive', 'deleted'

  email       Email @relation(fields: [emailId], references: [id], onDelete: Cascade)
  recipient   User  @relation(fields: [recipientId], references: [id])

  @@id([emailId, recipientId])
  @@map("email_recipients")
}

model Contact {
  ownerId       Int
  contactUserId Int

  owner       User @relation("OwnedContacts", fields: [ownerId], references: [id])
  contactUser User @relation("UserContacts", fields: [contactUserId], references: [id])

  @@id([ownerId, contactUserId])
  @@map("contacts")
}

model AudioCache {
    text String @id
    audioDataUri String

    @@map("audio_cache")
}
